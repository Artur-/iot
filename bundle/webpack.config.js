/**
 * This file has been autogenerated as it didn't exist or was made for an older incompatible version.
 * This file can be used for manual configuration will not be modified if the flowDefaults constant exists.
 */
const merge = require("webpack-merge");
// prettier-ignore
const flowDefaults = require('./webpack.generated.js');
const replaceInFile = require("replace-in-file");

const path = require("path");
const indexNoCacheSrc = path.resolve(__dirname, "index.nocache.js");
const indexNoCacheDir = `${flowDefaults.output.path}/build`;
const indexNoCacheFile = `${indexNoCacheDir}/index.nocache.js`;
const fs = require("fs");
const mkdirp = require("mkdirp");

module.exports = merge(flowDefaults, {
  plugins: [
    function(compiler) {
      compiler.hooks.afterEmit.tapAsync("FlowIdPlugin", (compilation, done) => {
        const bundleFilename = compilation
          .getStats()
          .toJson()
          .assetsByChunkName.bundle.replace(/.*\//, "");

          mkdirp.sync(indexNoCacheDir, function(err) {
          if (err) console.error(err);
          else console.log("pow!");
        });

        fs.copyFile(indexNoCacheSrc, indexNoCacheFile, err => {
          if (err) throw err;
        });
        console.log(
          "Using bundle name " +
            bundleFilename +
            " to update " +
            indexNoCacheFile
        );
        const options = {
          files: indexNoCacheFile,
          from: /#bundleFileName#/g,
          to: bundleFilename
        };
        replaceInFile.sync(options);
      });
    }
  ]
});

/**
 * This file can be used to configure the flow plugin defaults.
 * <code>
 *   // Add a custom plugin
 *   flowDefaults.plugins.push(new MyPlugin());
 *
 *   // Update the rules to also transpile `.mjs` files
 *   if (!flowDefaults.module.rules[0].test) {
 *     throw "Unexpected structure in generated webpack config";
 *   }
 *   flowDefaults.module.rules[0].test = /\.m?js$/
 *
 *   // Include a custom JS in the entry point in addition to generated-flow-imports.js
 *   if (typeof flowDefaults.entry.index != "string") {
 *     throw "Unexpected structure in generated webpack config";
 *   }
 *   flowDefaults.entry.index = [flowDefaults.entry.index, "myCustomFile.js"];
 * </code>
 * or add new configuration in the merge block.
 * <code>
 *   module.exports = merge(flowDefaults, {
 *     mode: 'development',
 *     devtool: 'inline-source-map'
 *   });
 * </code>
 */
